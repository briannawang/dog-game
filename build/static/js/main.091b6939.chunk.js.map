{"version":3,"sources":["index.js"],"names":["Dog","props","audio","Audio","randomInt","Math","random","className","id","value","onClick","play","DogBattle","handleClick","history","state","slice","stepNumber","dogIds","length","setState","concat","revealOne","revealTwo","calculateWinner","revealThree","revealFour","winners","gameBox","React","createRef","dogIdsTemp","i","push","j","floor","temp","round","dogOne","dogTwo","this","renderDog","dog","winnerNum","dogArray","dogMatch","winnerDog","window","location","reload","lineup","current","scrollIntoView","ref","roundOne","roundTwo","roundThree","roundFour","Component","ReactDOM","render","document","getElementById"],"mappings":"qNAIA,SAASA,EAAIC,GACT,IAEIC,EAAQ,IAAIC,MAAM,iBAElBC,EAAYC,KAAKC,SAEjBF,EAAY,GACZF,EAAQ,IAAIC,MAAM,gBACXC,GAAa,IAAMA,EAAY,GACtCF,EAAQ,IAAIC,MAAM,kBACXC,GAAa,IAAMA,EAAY,GACtCF,EAAQ,IAAIC,MAAM,mBACXC,GAAa,IAAMA,EAAY,GACtCF,EAAQ,IAAIC,MAAM,sBACXC,GAAa,KACpBF,EAAQ,IAAIC,MAAM,mBAOtB,OACI,sBAAKI,UAAW,SAAhB,UACI,qBAAKA,UAAW,MAAMC,GAAK,OAASP,EAAMQ,MAAM,GAAIC,QAN1C,WACdR,EAAMS,UAOF,6BA1BU,CAAC,WAAY,QAAS,UAAW,QAAS,QAAS,OAAQ,OAAQ,UA0B9DV,EAAMQ,Y,IAK3BG,E,kDACF,WAAYX,GAAQ,IAAD,uBACf,cAAMA,IA0EVY,YAAc,WACV,IAAMC,EAAU,EAAKC,MAAMD,QAAQE,MAAM,EAAG,EAAKD,MAAME,WAAa,GAE9DC,EADUJ,EAAQA,EAAQK,OAAS,GAClBD,OAAOF,QAE9B,EAAKI,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACvBH,OAAQA,KAEVD,WAAYH,EAAQK,SAGnB,EAAKJ,MAAMO,UAEL,EAAKP,MAAMO,YAAc,EAAKP,MAAMQ,WAC3C,EAAKC,gBAAgB,EAAGN,GACxB,EAAKE,SAAS,CAACG,WAAW,KACnB,EAAKR,MAAMO,WAAa,EAAKP,MAAMQ,YAAe,EAAKR,MAAMU,aACpE,EAAKD,gBAAgB,EAAGN,GACxB,EAAKE,SAAS,CAACK,aAAa,KACrB,EAAKV,MAAMO,WAAa,EAAKP,MAAMQ,WAAa,EAAKR,MAAMU,cAClE,EAAKD,gBAAgB,EAAGN,GACxB,EAAKE,SAAS,CAACM,YAAY,KAT3B,EAAKN,SAAS,CAACE,WAAW,KAtF9B,EAAKP,MAAQ,CACTY,QAAS,GACTb,QAAS,CAAC,CACNI,OAAQ,KAEZI,WAAW,EACXC,WAAW,EACXE,aAAa,EACbC,YAAY,EACZT,WAAY,GAEhB,EAAKW,QAAUC,IAAMC,YAKrB,IAFA,IAAMC,EAAa,GAEVC,EAAI,EAAGA,EAAI,EAAGA,IACnBD,EAAWE,KAAKD,GAGpB,EAAKjB,MAAMD,QAAQ,GAAGI,OAASa,EAAWf,QAE1C,IAAK,IAAIgB,EAAI,EAAKjB,MAAMD,QAAQ,GAAGI,OAAOC,OAAS,EAAGa,EAAI,EAAGA,IAAK,CAC9D,IAAIE,EAAI7B,KAAK8B,MAAM9B,KAAKC,UAAY0B,EAAI,IACpCI,EAAO,EAAKrB,MAAMD,QAAQ,GAAGI,OAAOc,GACxC,EAAKjB,MAAMD,QAAQ,GAAGI,OAAOc,GAAK,EAAKjB,MAAMD,QAAQ,GAAGI,OAAOgB,GAC/D,EAAKnB,MAAMD,QAAQ,GAAGI,OAAOgB,GAAKE,EA5BvB,S,6CAgCnB,SAAUJ,GACN,OACI,cAAChC,EAAD,CACIS,MAAOuB,M,sBAKnB,SAASK,EAAOC,EAAQC,GACpB,OACI,sBAAKhC,UAAU,UAAf,UACI,6BAAK,WAAa8B,EAAS,OAC3B,sBAAK9B,UAAU,WAAf,UACKiC,KAAKC,UAAUH,GACfE,KAAKC,UAAUF,W,uBAMhC,SAAUG,GACN,OACI,sBAAKnC,UAAU,UAAf,UACI,6BAAK,aACL,qBAAKA,UAAU,YAAf,SACKiC,KAAKC,UAAUC,U,6BAMhC,SAAgBC,EAAWC,GACvB,IAAK,IAAIZ,EAAI,EAAGA,EAAIW,EAAWX,IACtB3B,KAAKC,UAAY,GAClBkC,KAAKzB,MAAMY,QAAQK,GAAKY,EAAa,EAAJZ,GAEjCQ,KAAKzB,MAAMY,QAAQK,GAAKY,EAAa,EAAJZ,EAAQ,GAEjD,IAAK,IAAIA,EAAI,EAAGA,EAAIQ,KAAKzB,MAAMY,QAAQR,OAAQa,IAC3CY,EAASZ,GAAKQ,KAAKzB,MAAMY,QAAQK,K,sBA8BzC,WACI,IAAMlB,EAAU0B,KAAKzB,MAAMD,QAE3B,OACI,sBAAKP,UAAW,oBAAhB,UACA,6BAAK,aACL,sBAAKA,UAAW,QAAhB,UACKiC,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,IACzDsB,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,IACzDsB,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,IACzDsB,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,OAE9D,wBACIR,QAAS8B,KAAK3B,YADlB,kC,sBASR,WACI,IAAMC,EAAU0B,KAAKzB,MAAMD,QAE3B,OACI,sBAAKP,UAAW,oBAAhB,UACA,6BAAK,aACL,sBAAKA,UAAW,QAAhB,UACKiC,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,IACzDsB,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,OAE9D,wBACIR,QAAS8B,KAAK3B,YADlB,kC,wBASR,WACI,IAAMC,EAAU0B,KAAKzB,MAAMD,QAE3B,OACI,sBAAKP,UAAW,sBAAhB,UACA,6BAAK,aACL,qBAAKA,UAAW,QAAhB,SACKiC,KAAKK,SAAS,EAAG/B,EAAQ,GAAGI,OAAO,GAAIJ,EAAQ,GAAGI,OAAO,MAE9D,wBACIR,QAAS8B,KAAK3B,YADlB,iC,uBASR,WACI,IAAMC,EAAU0B,KAAKzB,MAAMD,QAK3B,OACI,sBAAKP,UAAW,qBAAhB,UACA,6BAAK,aACL,qBAAKA,UAAW,QAAhB,SACKiC,KAAKM,UAAUhC,EAAQ,GAAGI,OAAO,MAEtC,8BACC,wBAAQX,UAAU,SAASG,QAXZ,WAChBqC,OAAOC,SAASC,UAUf,qBAED,oBAAIzC,GAAG,SAAP,qC,oBAKR,WAKI,IALM,IAAD,OACC0C,EAAS,GAINlB,EAAI,EAAGA,EAAIQ,KAAKzB,MAAMD,QAAQ,GAAGI,OAAOC,OAAQa,IACrDkB,EAAOjB,KAAK,8BAAcO,KAAKC,UAAUD,KAAKzB,MAAMD,QAAQ,GAAGI,OAAOc,KAAhDA,IAG1B,OACI,gCACI,sBAAKzB,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,WACf,oBAAIC,GAAG,QAAP,yBAEJ,qBAAKD,UAAU,wBAAf,SACI,wBAAQG,QAdF,kBAAM,EAAKkB,QAAQuB,QAAQC,kBAcD7C,UAAU,sBAGlD,sBAAK8C,IAAKb,KAAKZ,QAAf,UACI,sBAAKrB,UAAW,WAAhB,UACI,6BAAK,YACL,qBAAKA,UAAU,SAAf,SACK2C,IAEL,wBAAQxC,QAAS8B,KAAK3B,YAAtB,uBAEH2B,KAAKzB,MAAMO,UAAYkB,KAAKc,WAAa,KACzCd,KAAKzB,MAAMQ,UAAYiB,KAAKe,WAAa,KACzCf,KAAKzB,MAAMU,YAAce,KAAKgB,aAAe,KAC7ChB,KAAKzB,MAAMW,WAAac,KAAKiB,YAAc,e,GAnNxC5B,IAAM6B,WA2N9BC,IAASC,OACL,cAAChD,EAAD,IACAiD,SAASC,eAAe,W","file":"static/js/main.091b6939.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Dog(props) {\n    const dogBreeds = [\"G. Shep.\", \"Husky\", \"G. Ret.\", \"Corgi\", \"Shiba\", \"Dal.\", \"Pom.\", \"Bombay\"]\n    \n    var audio = new Audio('/dog_bark.mp3');\n    \n    var randomInt = Math.random();\n\n    if (randomInt < .2) {\n        audio = new Audio('dog_bark.mp3');\n    } else if (randomInt >= .2 && randomInt < .4) {\n        audio = new Audio('dog_bark_2.mp3');\n    } else if (randomInt >= .4 && randomInt < .6) {\n        audio = new Audio('medium_bark.mp3');\n    } else if (randomInt >= .6 && randomInt < .8) {\n        audio = new Audio('dalmatian_bark.mp3');\n    } else if (randomInt >= 0.8) {\n        audio = new Audio('small_bark.mp3');\n    }\n    \n    const playAudio = () => {\n        audio.play();\n    };\n    \n    return (\n        <div className= \"dogBox\">\n            <div className= \"dog\" id= {\"dog\" + (props.value+1)} onClick={playAudio}>\n            </div>\n            <h3>{dogBreeds[props.value]}</h3>\n        </div>\n    )\n}\n\nclass DogBattle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            winners: [],\n            history: [{\n                dogIds: []\n            }],\n            revealOne: false,\n            revealTwo: false,\n            revealThree: false,\n            revealFour: false,\n            stepNumber: 0,\n        }\n        this.gameBox = React.createRef()\n        ;\n\n        const dogIdsTemp = []\n\n        for (let i = 0; i < 8; i++) {\n            dogIdsTemp.push(i)\n        }\n\n        this.state.history[0].dogIds = dogIdsTemp.slice();\n\n        for (let i = this.state.history[0].dogIds.length - 1; i > 0; i--) {\n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = this.state.history[0].dogIds[i];\n            this.state.history[0].dogIds[i] = this.state.history[0].dogIds[j];\n            this.state.history[0].dogIds[j] = temp;\n        }\n    }\n    \n    renderDog(i) {\n        return (\n            <Dog\n                value={i}\n            />\n        )\n    }\n\n    dogMatch(round, dogOne, dogTwo) {\n        return (\n            <div className=\"bracket\">\n                <h2>{\"Bracket \" + round +  \": \"}</h2>\n                <div className=\"dogMatch\">\n                    {this.renderDog(dogOne)}\n                    {this.renderDog(dogTwo)}\n                </div>\n            </div>\n        )\n    }\n\n    winnerDog(dog) {\n        return (\n            <div className=\"bracket\">\n                <h2>{\"Winner: \"}</h2>\n                <div className=\"winnerDog\">\n                    {this.renderDog(dog)}\n                </div>\n            </div>\n        )\n    }\n\n    calculateWinner(winnerNum, dogArray) {\n        for (let i = 0; i < winnerNum; i++)\n            {if (Math.random() >= .5) {\n                this.state.winners[i] = dogArray[i * 2]\n            } else {\n                this.state.winners[i] = dogArray[i * 2 + 1]\n            }}\n        for (let i = 0; i < this.state.winners.length; i++) {\n            dogArray[i] = this.state.winners[i];\n        }\n    }\n\n    handleClick = () => {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const dogIds = current.dogIds.slice();\n\n        this.setState({\n            history: history.concat([{\n              dogIds: dogIds,\n            }]),\n            stepNumber: history.length,\n          });\n\n        if (!this.state.revealOne) {\n            this.setState({revealOne: true})\n        } else if (this.state.revealOne && !this.state.revealTwo) {\n            this.calculateWinner(4, dogIds)\n            this.setState({revealTwo: true})\n        } else if (this.state.revealOne && this.state.revealTwo  && !this.state.revealThree) {\n            this.calculateWinner(2, dogIds)\n            this.setState({revealThree: true})\n        } else if (this.state.revealOne && this.state.revealTwo && this.state.revealThree) {\n            this.calculateWinner(1, dogIds)\n            this.setState({revealFour: true})\n        }\n    }\n\n    roundOne() {\n        const history = this.state.history;\n\n        return (\n            <div className= \"roundBox roundOne\">\n            <h1>{\"Round 1:\"}</h1>\n            <div className={\"round\"}>\n                {this.dogMatch(1, history[1].dogIds[0], history[1].dogIds[1])}\n                {this.dogMatch(2, history[1].dogIds[2], history[1].dogIds[3])}\n                {this.dogMatch(3, history[1].dogIds[4], history[1].dogIds[5])}\n                {this.dogMatch(4, history[1].dogIds[6], history[1].dogIds[7])}\n            </div>\n            <button\n                onClick={this.handleClick}\n            >\n                Reveal Winners!\n            </button>\n        </div>\n        )\n    }\n\n    roundTwo() {\n        const history = this.state.history;\n\n        return (\n            <div className= \"roundBox roundTwo\">\n            <h1>{\"Round 2:\"}</h1>\n            <div className={\"round\"}>\n                {this.dogMatch(1, history[2].dogIds[0], history[2].dogIds[1])}\n                {this.dogMatch(2, history[2].dogIds[2], history[2].dogIds[3])}\n            </div>\n            <button\n                onClick={this.handleClick}\n            >\n                Reveal Winners!\n            </button>\n        </div>\n        )\n    }\n\n    roundThree() {\n        const history = this.state.history;\n        \n        return (\n            <div className= \"roundBox roundThree\">\n            <h1>{\"Round 3:\"}</h1>\n            <div className={\"round\"}>\n                {this.dogMatch(1, history[3].dogIds[0], history[3].dogIds[1])}\n            </div>\n            <button\n                onClick={this.handleClick}\n            >\n                Reveal Winner!\n            </button>\n        </div>\n        )\n    }\n\n    roundFour() {\n        const history = this.state.history;\n        const refreshPage = ()=>{\n            window.location.reload();\n         }\n       \n        return (\n            <div className= \"roundBox roundFour\">\n            <h1>{\"Round 4:\"}</h1>\n            <div className={\"round\"}>\n                {this.winnerDog(history[4].dogIds[0])}\n            </div>\n            <div>\n             <button className=\"reload\" onClick={refreshPage}>Retry</button>\n           </div>\n            <h3 id=\"hidden\">happy fathers day!</h3>\n        </div>\n        )\n    }\n\n    render() {\n        const lineup = []\n\n        const executeScroll = () => this.gameBox.current.scrollIntoView()   \n\n        for (let i = 0; i < this.state.history[0].dogIds.length; i++) {\n            lineup.push(<div key={i}>{this.renderDog(this.state.history[0].dogIds[i])}</div>)\n        }\n\n        return (\n            <div>\n                <div className=\"introBox\">\n                    <div className=\"titleBox\">\n                        <div className=\"dogGif\"></div>\n                        <h1 id=\"title\">DogFight</h1>\n                    </div>\n                    <div className=\"scrollButtonContainer\">\n                        <button onClick={executeScroll} className=\"scrollButton\"></button>\n                    </div>  \n                </div>\n                <div ref={this.gameBox}>\n                    <div className= \"roundBox\">\n                        <h1>{\"Lineup:\"}</h1>\n                        <div className=\"lineup\">\n                            {lineup}\n                        </div>\n                        <button onClick={this.handleClick}>Start!</button>\n                    </div>\n                    {this.state.revealOne ? this.roundOne() : null}\n                    {this.state.revealTwo ? this.roundTwo() : null}\n                    {this.state.revealThree ? this.roundThree() : null}\n                    {this.state.revealFour ? this.roundFour() : null}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nReactDOM.render(\n    <DogBattle />,\n    document.getElementById('root')\n  );\n"],"sourceRoot":""}